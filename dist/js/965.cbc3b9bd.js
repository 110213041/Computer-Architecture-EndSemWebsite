"use strict";(self["webpackChunkfinal_site"]=self["webpackChunkfinal_site"]||[]).push([[965],{965:function(e,l,t){t.r(l),t.d(l,{default:function(){return nl}});var n=t(3396);const a={class:"chapter-container"},r={class:"chapter-article"},i={class:"article-container"},d=(0,n._)("p",null," C語言的開發模式, 是編寫.c的Source Code, 再經由Compiler編譯成Object Code。所謂Object Code指的是和硬體相關的機器指令, 也就是說當我們想要把C程式移植到不同的硬體時, 必須要重新Compile,以產生新的執行檔。除了需要重新編譯外,新系統是否具備應用程式所需的程式庫,include的檔案是否相容, 也是程式能否在新機器上順利編譯和執行的條件之一。 ",-1),o=(0,n._)("p",null," 在實務上,為了讓C程式能在不同的UNIX版本上都能順利編譯,原作者往往必須使用前置處理器的#ifdef指令,判斷不同環境的適當寫法。如果想把在UNIX上開發的C程式移植到Windows上,則有用到專屬程式庫的部分(如UNIX的使用者介面可能用到X Window的API,Windows就沒有支援,必須一台一台灌程式庫才行,很可能還要花錢買),就必須重寫才行。 ",-1),s=(0,n._)("p",null," 解決此類問題的方法之一,是定義一種Virtual Machine(虛擬機器),讓程式語言編譯時不要翻成實體機器的指令,而是翻成Virtual Machine的目的碼。Virtual Machine一般是以軟體來模擬的,只要新的平台有Virtual Machine,則原始程式不用Compile,執行舊機器上已有的Virtual Machine目的碼,就可以了。當然要達到完全不用重新Compile就能執行的理想,還要配合標準的程式庫才行。 ",-1),u=(0,n._)("p",null," Java語言基於上述理念,定義了Java Virtual Machine,它所用的指令稱為byte code。使用Virtual Machine的缺點之一,是執行的速度較慢,代價是開發的速度變快了。以現在的硬體來說,大部分應用程式的執行速度已經沒有那麼重要,反倒是軟體的開發速度和品質越來越值得重視。 ",-1),c=(0,n._)("p",null," 此外JVM的技術不斷進步, 諸如Just In Time(JIT) Compiler, 或HotSpot等技術都可以讓Java程式以非常接近原生碼(Native Code)的速度執行。因此不要因為某些偏頗的報告或直覺, 就不使用Java了。 ",-1),h=(0,n._)("p",null,[(0,n.Uk)(" 開發Java應用程式的工具中,最常見的是由Java的原創公司Sun Micro所出版的JDK(Java Development Kit)。"),(0,n._)("a",{href:"http://java.sun.com/javase/downloads/?intcmp=1281"}," JDK可以免費下載 "),(0,n.Uk)(" 。以Text Editor寫好的Hello.java原始檔: ")],-1),v=(0,n._)("p",null,"這程式的C版本如下",-1),m=(0,n._)("p",null,"經過:",-1),p=(0,n._)("p",null,"編譯完成後會產生byte code格式的Hello.class,然後",-1),L=(0,n._)("p",null," 就可以利用Java Virtual Machine(此處是java這個執行檔)來執行了。 ",-1),g=(0,n._)("p",null,"上述過程中幾個比較會發生的問題是",-1),_=(0,n._)("ul",null,[(0,n._)("li",null,"javac找不到: 請設定path這個環境變數。"),(0,n._)("li",null," javac抱怨class Hello找不到: 請確定你的檔名是大寫Hello.java,程式內的public class Hello有沒有大小寫的問題。 "),(0,n._)("li",null," java抱怨找不到main: 請確定public static void main(String[] argv)毫無錯誤。 ")],-1),f={class:"article-container"},T=(0,n._)("p",null," Java是由C++簡化來的。由於C++要和C完全相容,又很注重效能問題,因此C++算是很複雜的程式語言。Java在設計之初,考量的重點之一就是簡單,因此和C++比起來,不僅更為物件導向,而且比C++容易學習。 ",-1),b=(0,n._)("p",null," Java許多運算符號和敘述語法都是來自C語言,假設各位已經對C語言有所了解,本章後面的部分只將Java和C在運算符號和敘述語法上的差異點出來,相同的部分請參見C語言的課程內容。 ",-1),H={class:"article-container"},w=(0,n._)("p",null,"Java語言所定義的基本資料型別有",-1),y=(0,n._)("p",null,"Java的資料型態裡沒有unsigned。",-1),O=(0,n._)("p",null," Java對數值型態的轉換比C稍微嚴格一點,下列左邊的部分都可以指定(assignment)給右邊的型別: ",-1),W=(0,n._)("pre",null,"byte --\x3e short --\x3e int --\x3e long --\x3e float --\x3e double",-1),j=(0,n._)("p",null," 除上述外,其他型別間的轉換都必須下達型別轉換(Type Casting)命令來處理,其形式為圓括弧裡寫上型別名稱,如(double) ",-1),S=(0,n._)("p",null," 由於Java在char的型態部分採用Unicode,因此字元常數的表示法,除因循C的規則外,也可以直接指定16bits Unicode編碼給char型別的變數。例如由Windows \"字元對應表\" 程式中可查到象棋中的紅車的unicode編碼為4FE5, Java可用 '\\u4fe5' 來表達。Java的變數也可以用Unicode來命名,換句話說,你可以用中文取變數名稱。 ",-1),C=(0,n._)("p",null," 除了這些基本資料型別外,Java還有一個稱為Reference(參考)的型別。Reference用來存取Object(物件),其功能和C語言的pointer用來存取記憶體有點像,但沒有pointer的&+-等運算符號,而且Reference只能存取型態相符合的類別。宣告Reference的語法是ClassName varName,例如 ",-1),I=(0,n._)("p",null," 宣告s是一個型態為reference的變數,這表示我們可透過s來存取屬於String類別的物件(s is a reference to String object)。 ",-1),x=(0,n._)("p",null,[(0,n.Uk)(" 要特別強調的是, "),(0,n._)("span",{class:"important-red"}," s並不是物件, 而是用來指向String物件的reference "),(0,n.Uk)(" 。打個比方, ")],-1),J=(0,n._)("p",null,' 變數 "手指頭" 宣告為reference, 可指向屬於 class "動物" 的物件, 手指頭不是動物, 而是用手指頭指向某隻動物。 ',-1),M=(0,n._)("p",null,"以上變數的型態都是reference",-1),k={class:"article-container"},N=(0,n.Uk)(" Java語言在運算式的部分,和"),D=(0,n.Uk)("C語言"),z=(0,n.Uk)("極為類似, 除了沒有sizeof, pointer和struct相關的運算符號外, 另外新增了>>>向右無號shift, 以及用來判斷物件型態的instanceof。Java的常數的表示法也和C相同,而Java裡的新資料型態boolean的合法值為true和false兩個常數。 "),U=(0,n._)("p",null," Java語言和C語言有關邏輯運算最大的不同,在於Java以boolean資料型態(只有true和false兩種值)判斷條件是否成立,而C語言只能使用0或非0。 ",-1),E={class:"article-container"},V=(0,n.Uk)(" Java的流程控制敘述和"),A=(0,n.Uk)("C語言"),F=(0,n.Uk)("極為類似,不同處在於break和continue兩個指令。Java的break和continue指令後面可以加上標籤,以指示要跳出或繼續的範圍。 "),R=(0,n._)("p",null," 在上面的例子中,當j==50且i==50時,break指令會跳出最外面的迴圈,直接印出迴圈終止訊息。如果break後面沒有outerLoop的話, 只會跳出裡面的迴圈,然後i從51繼續做下去。 ",-1),Z={class:"article-container"},B=(0,n._)("p",null," C語言定義以0結尾的字元陣列就是字串。但對Java來說, 字串是由String類別來表達, 也就是說String是物件而不是陣列。由於我們經常使用字串, 為了寫作程式方便起見, Java Compiler碰到+符號某一邊的型態是String時, 就會把+翻譯成StringBuffer類別裡相對應的append Method。例如: ",-1),K=(0,n._)("p",null,"會翻譯成:",-1),q=(0,n._)("p",null," 如果你會C++, 看到Java字串+符號的語法, 千萬不要以為Java支援operator overloading。Java只是透過Compiler來做特別的轉換, 稱這種技術為Compiler Sugar比較適合。 ",-1),X={class:"article-container"},Y=(0,n._)("p",null,"寫作Java程式時,請注意下列幾種風格",-1),P=(0,n._)("ul",null,[(0,n._)("li",null,"Class Name請首字大寫"),(0,n._)("li",null,"Variable Name和Method Name請首字小寫"),(0,n._)("li",null," 如果名稱由數個英文字組成,第二個英文字以後首字大寫 "),(0,n._)("li",null,"內縮四個空格"),(0,n._)("li",null," 註解部分如要變成說明文件,請遵照javadoc這個工具的寫作規則 ")],-1),$={class:"article-container"},G=(0,n._)("p",null,"怎麼寫呢?",-1),Q=(0,n._)("p",null," 特別注意上述的運算式裡/2要放到最後面,如果寫成n/2*(n+1),從數學式子的角度看好像沒問題,但別忘了,binary operator的兩邊必須是同樣型別的資料,而且計算的結果也是同樣的型別。因此n/2*(n+1)會先計算n/2,如果n不能被2整除的話,那麼為了符合計算結果必須是整數的限制,則小數點的部份就會無條件捨去,使得計算的結果錯誤。下面的範例一樣要注意相同的問題。 ",-1),ee=(0,n._)("p",null,"怎麼寫?",-1),le=(0,n._)("p",null," Java語言規定浮點數轉整數時,小數點部分無條件捨去。如果要達到浮點數四捨五入為整數的效果,可以使用下面的小技巧 ",-1),te=(0,n._)("div",{class:"article-container"},null,-1),ne=(0,n._)("ol",null,[(0,n._)("li",null," 需要1個變數紀錄到目前為止所有inputNum的總和,稱此變數為sum,其初始值為0 "),(0,n._)("li",null," 以迴圈執行5次,每次輸入數字加總到sum,迴圈執行的次數以變數i來代表 "),(0,n._)("li",null,"平均數為sum/5"),(0,n._)("li",null,"如何讀入資料?")],-1),ae=(0,n._)("ol",null,[(0,n._)("li",null,"要想辦法拜訪1,2,3...n的每一個數字一次"),(0,n._)("li",null," 可用for(i=1; i <= n; i++)的形式達成上述目標 "),(0,n._)("li",null,"拜訪到這些數字時,就把它們加起來")],-1),re=(0,n._)("ol",null,[(0,n._)("li",null," 要想辦法拜訪1,3,5...n的每一個數字一次,也就是從1開始每次加2 "),(0,n._)("li",null," 可用for(i = 1; i <= n; i += 2)的形式達成上述目標 "),(0,n._)("li",null,"拜訪到這些數字時,就把它們加起來")],-1),ie=(0,n._)("p",null,"怎麼寫?",-1),de=(0,n._)("ol",null,[(0,n._)("li",null," 總共有i = 1..9 列, j = 1..9 行, 對第i列第j行元素來說, 其數值為i*j ")],-1),oe=(0,n._)("pre",null,"***\r\n***\r\n*** \r\n",-1),se=(0,n._)("p",null,"解析",-1),ue=(0,n._)("ol",null,[(0,n._)("li",null," 螢幕上的游標只能由上而下,由左而右,無法回頭。 "),(0,n._)("li",null," 此圖形共有1..size列,每列有size個*,因此可用兩層迴圈來做。 "),(0,n._)("li",null," 要讓一個敘述執行size次,可用for(i = 1; i <= size; i++)的形式來達成 ")],-1),ce=(0,n._)("pre",null,"*\r\n**\r\n***\r\n    ",-1),he=(0,n._)("p",null,"解析",-1),ve=(0,n._)("ol",null,[(0,n._)("li",null," 螢幕上的游標只能由上而下,由左而右,無法回頭。 "),(0,n._)("li",null," 此圖形共有1..size列,第i列有個*,因此可用兩層迴圈來做。 ")],-1),me=(0,n._)("p",null,"怎麼寫?",-1),pe=(0,n._)("pre",null,"  *\r\n ***\r\n*****\r\n    ",-1),Le=(0,n._)("p",null,"解析",-1),ge=(0,n._)("ol",null,[(0,n._)("li",null," 總共有1..size列,對第i列而言,有size-i個空格,以及(2 * i- 1)個* ")],-1),_e=(0,n._)("p",null,"怎麼寫?",-1),fe=(0,n._)("ol",null,[(0,n._)("li",null,"此函數需要兩個參數x,y"),(0,n._)("li",null," 當y不能整除x時,將x設成為y,y設為x%y, 重複此步驟直到x%y為0 "),(0,n._)("li",null,"此時y就是這兩個數的最大公因數")],-1),Te=(0,n._)("p",null,"怎麼寫?",-1),be=(0,n._)("ol",null,[(0,n._)("li",null,"F(n)=n, if n<=1;"),(0,n._)("li",null,"F(n)=F(n-1)+F(n-2), otherwise"),(0,n._)("li",null," 可定義兩變數fn_1,fn_2表示最近兩個找出的費氏數 "),(0,n._)("li",null,"下一個費氏數依定義為fn_1 + fn_2"),(0,n._)("li",null," 找到最新的費氏數後,最近的兩個費氏數就變成了fn_1+fn_2以及fn_1 "),(0,n._)("li",null,"以變數i紀錄目前要求的是哪一個費氏數"),(0,n._)("li",null," 以變數tmp作為更新最新兩個費氏數所需的記憶體空間 ")],-1),He={class:"article-container"},we=(0,n._)("p",null,"解析",-1),ye=(0,n._)("ul",null,[(0,n._)("li",null,"邊際條件是n=1時,總合為1"),(0,n._)("li",null,"該函數可定成int sum(int n)"),(0,n._)("li",null,"sum(n) = n + sum(n - 1)")],-1),Oe=(0,n._)("p",null,"怎麼寫?",-1),We=(0,n._)("p",null,"解析",-1),je=(0,n._)("ul",null,[(0,n._)("li",null,"如果n==0,則最大公因數為m"),(0,n._)("li",null," 如果n不等於0,則最大公因數為gcd(m,n)==gcd(n, m%n) ")],-1),Se=(0,n._)("p",null,"怎麼寫?",-1),Ce=(0,n._)("p",null,"解析",-1),Ie=(0,n._)("ul",null,[(0,n._)("li",null,"費氏數列的定義為F(n)=n, if n<= 1"),(0,n._)("li",null,"F(n) = F(n-1)+F(n-2), if n > 1。")],-1),xe=(0,n._)("p",null,"A(m, n)定義為",-1),Je=(0,n._)("ol",null,[(0,n._)("li",null,"n + 1, if m = 0"),(0,n._)("li",null,"A(m - 1, 1), if n = 0"),(0,n._)("li",null,"A(m - 1, A(m, n - 1)), otherwise")],-1),Me=(0,n._)("p",null,"怎麼寫?",-1);function ke(e,l,t,ke,Ne,De){const ze=(0,n.up)("HeaderTemplate"),Ue=(0,n.up)("highlightjs"),Ee=(0,n.up)("TableThreeColumn"),Ve=(0,n.up)("router-link"),Ae=(0,n.up)("TableTwoColumn"),Fe=(0,n.up)("TableOfContentSidebar");return(0,n.wg)(),(0,n.iD)("div",a,[(0,n._)("div",r,[(0,n._)("div",i,[(0,n.Wm)(ze,{title:Ne.allHeaders[0].title,headerLevel:Ne.allHeaders[0].headerLevel,headerId:0},null,8,["title","headerLevel"]),d,o,s,u,c,h,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Hello {\r\n    public static int gvar;\r\n    public static void say(String s) {\r\n        int x = 10;\r\n        System.out.print(s+x);\r\n    }\r\n    public static void main(String[] argv) {\r\n        float y = 0;\r\n        say("Hello, world\\n");\r\n    }\r\n}'}),v,(0,n.Wm)(Ue,{class:"code-container",language:"c",code:'#include <stdio.h>\r\nint gvar;\r\nvoid say(char[] s) {\r\n    int x = 10;\r\n    printf("%s%d", s, x);\r\n}\r\nint main(int argc, char** argv) {\r\n    float y = 0;\r\n    say("Hello, world\\n");\r\n}'}),m,(0,n.Wm)(Ue,{class:"code-container",autodetect:"",code:"javac Hello.java"}),p,(0,n.Wm)(Ue,{class:"code-container",autodetect:"",code:"java Hello"}),L,g,_]),(0,n._)("div",f,[(0,n.Wm)(ze,{title:Ne.allHeaders[1].title,headerLevel:Ne.allHeaders[1].headerLevel,headerId:1},null,8,["title","headerLevel"]),T,b]),(0,n._)("div",H,[(0,n.Wm)(ze,{title:Ne.allHeaders[2].title,headerLevel:Ne.allHeaders[2].headerLevel,headerId:2},null,8,["title","headerLevel"]),w,(0,n.Wm)(Ee,{data:Ne.table1},null,8,["data"]),y,O,W,j,S,C,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"String s;"}),I,x,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class 動物 {\r\n    動物 手指頭; // java 因字元編碼使用unicode, 所以可用中文當變數名稱\r\n    public static void main(String[] arg) {\r\n        動物 手指頭2;\r\n        手指頭2 = new 動物();\r\n    }\r\n}"}),J,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"java.lang.Float f;\r\njava.lang.Double d;\r\njava.lang.Integer i;"}),M]),(0,n._)("div",k,[(0,n.Wm)(ze,{title:Ne.allHeaders[3].title,headerLevel:Ne.allHeaders[3].headerLevel,headerId:3},null,8,["title","headerLevel"]),(0,n._)("p",null,[N,(0,n.Wm)(Ve,{to:"/C"},{default:(0,n.w5)((()=>[D])),_:1}),z]),(0,n.Wm)(ze,{title:Ne.allHeaders[4].title,headerLevel:Ne.allHeaders[4].headerLevel,headerId:4},null,8,["title","headerLevel"]),(0,n.Wm)(Ae,{data:Ne.table2},null,8,["data"]),(0,n.Wm)(ze,{title:Ne.allHeaders[5].title,headerLevel:Ne.allHeaders[5].headerLevel,headerId:5},null,8,["title","headerLevel"]),(0,n.Wm)(Ae,{data:Ne.table3},null,8,["data"]),U,(0,n.Wm)(ze,{title:Ne.allHeaders[6].title,headerLevel:Ne.allHeaders[6].headerLevel,headerId:6},null,8,["title","headerLevel"]),(0,n.Wm)(Ae,{data:Ne.table4},null,8,["data"]),(0,n.Wm)(ze,{title:Ne.allHeaders[7].title,headerLevel:Ne.allHeaders[7].headerLevel,headerId:7},null,8,["title","headerLevel"]),(0,n.Wm)(Ae,{data:Ne.table5},null,8,["data"]),(0,n.Wm)(ze,{title:Ne.allHeaders[8].title,headerLevel:Ne.allHeaders[8].headerLevel,headerId:8},null,8,["title","headerLevel"]),(0,n.Wm)(Ee,{data:Ne.table6},null,8,["data"])]),(0,n._)("div",E,[(0,n.Wm)(ze,{title:Ne.allHeaders[9].title,headerLevel:Ne.allHeaders[9].headerLevel,headerId:9},null,8,["title","headerLevel"]),V,(0,n.Wm)(Ve,{to:"/C"},{default:(0,n.w5)((()=>[A])),_:1}),F,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class BreakContinueExample {\r\n    public static void main(String[] argv) {\r\n        int i, j;\r\n        outerLoop:\r\n        for (i = 0; i < 100; i++) {\r\n            innerLoop:\r\n            for (j = 0; j < 100; j++) {\r\n                if (j == 50 && i == 50) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n        }\r\n        System.out.println("Loop have been terminated.");\r\n    }\r\n}'}),R]),(0,n._)("div",Z,[(0,n.Wm)(ze,{title:Ne.allHeaders[10].title,headerLevel:Ne.allHeaders[10].headerLevel,headerId:10},null,8,["title","headerLevel"]),B,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class StringTest {\r\n    public static void main(String[] argv) {\r\n        int x = 5;\r\n        float y = 1.5;\r\n        System.out.println("x = " + x + ", y = " + y);\r\n    }\r\n}'}),K,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class StringTest {\r\n    public static void main(String[] argv) {\r\n        int x = 5;\r\n        float y = 1.5;\r\n        System.out.println((new StringBuffer("x = ")).append(x).append(", y = ").append(y).toString());\r\n    }\r\n}'}),q]),(0,n._)("div",X,[(0,n.Wm)(ze,{title:Ne.allHeaders[11].title,headerLevel:Ne.allHeaders[11].headerLevel,headerId:11},null,8,["title","headerLevel"]),Y,P,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'/**\r\n * 第一行的兩個**用來告訴javadoc此部份註解要變成HTML文件的一部份\r\n * 這段註解裡的所有文字都會變成此類別一開頭的說明\r\n */\r\npublic class Hello { // Class Name首字大寫\r\n    /**\r\n     * 此段註解會變成描述main方法的一部分\r\n     * @param argv 使用@param註記會產生參數(parameter)argv的相關說明\r\n     * @return 傳回值的意義說明\r\n     */\r\n     public static void main(String[] argv) { // Method Name首字小寫\r\n        // argv: array of references to String object\r\n        int myVariable; // 變數宣告\r\n        int i, sum;\r\n        for (i = 1, sum = 0; i <= 100; i++) {\r\n            sum += i;\r\n        }\r\n        System.out.println("summation from 1 to 100 is "+sum);\r\n    }\r\n}'})]),(0,n._)("div",$,[(0,n.Wm)(ze,{title:Ne.allHeaders[12].title,headerLevel:Ne.allHeaders[12].headerLevel,headerId:12},null,8,["title","headerLevel"]),(0,n.Wm)(ze,{title:Ne.allHeaders[13].title,headerLevel:Ne.allHeaders[13].headerLevel,headerId:13},null,8,["title","headerLevel"]),(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Example {\r\n    public static void main(String[] argv) {\r\n        float degree = 100.0;\r\n        System.out.println("100C=" + (degree * 9.0 / 5.0 + 32.0));\r\n    }\r\n}'}),(0,n.Wm)(ze,{title:Ne.allHeaders[14].title,headerLevel:Ne.allHeaders[14].headerLevel,headerId:14},null,8,["title","headerLevel"]),G,(0,n.Wm)(ze,{title:Ne.allHeaders[15].title,headerLevel:Ne.allHeaders[15].headerLevel,headerId:15},null,8,["title","headerLevel"]),(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Example {\r\n    public static void main(String[] argv) {\r\n        int n = 100;\r\n        System.out.println("1+2+...+"+n+"  = " + ( n * (n + 1) / 2));\r\n    }\r\n}'}),Q,(0,n.Wm)(ze,{title:Ne.allHeaders[16].title,headerLevel:Ne.allHeaders[16].headerLevel,headerId:16},null,8,["title","headerLevel"]),ee,(0,n.Wm)(ze,{title:Ne.allHeaders[17].title,headerLevel:Ne.allHeaders[17].headerLevel,headerId:17},null,8,["title","headerLevel"]),le,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Example {\r\n    public static void main(String[] argv) {\r\n        double x = 20.6;\r\n        System.out.println(x + " 四捨五入成為 " + (int)(x+0.5));\r\n        System.out.println(x + " 四捨五入成為 " + round(x));\r\n    }\r\n    static int round(double y) {\r\n        return (int)(y + 0.5);\r\n    }\r\n}'}),te,(0,n.Wm)(ze,{title:Ne.allHeaders[18].title,headerLevel:Ne.allHeaders[18].headerLevel,headerId:18},null,8,["title","headerLevel"]),(0,n.Wm)(ze,{title:Ne.allHeaders[19].title,headerLevel:Ne.allHeaders[19].headerLevel,headerId:19},null,8,["title","headerLevel"]),ne,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static int sum(int n) {\r\n        int total = 0; // 紀錄到目前為止的總和\r\n        for (int i = 1; i <= n; i++) {\r\n            total += i;\r\n        }\r\n        return total;\r\n    }\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n}"}),(0,n.Wm)(ze,{title:Ne.allHeaders[20].title,headerLevel:Ne.allHeaders[20].headerLevel,headerId:20},null,8,["title","headerLevel"]),ae,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static int sum(int n) {\r\n        int total = 0; // 紀錄到目前為止的總和\r\n        for (int i = 1; i <= n; i++) {\r\n            total += i;\r\n        }\r\n        return total;\r\n    }\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n}"}),(0,n.Wm)(ze,{title:Ne.allHeaders[21].title,headerLevel:Ne.allHeaders[21].headerLevel,headerId:21},null,8,["title","headerLevel"]),re,ie,(0,n.Wm)(ze,{title:Ne.allHeaders[22].title,headerLevel:Ne.allHeaders[22].headerLevel,headerId:22},null,8,["title","headerLevel"]),de,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Example {\r\n    public static void main(String[] argv) {\r\n        for (int i = 1; i <= 9; i++) {\r\n            for (int j = 1; j <= 9; j++) {\r\n                System.out.print(" " + (i * j));\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}'}),(0,n.Wm)(ze,{title:Ne.allHeaders[23].title,headerLevel:Ne.allHeaders[23].headerLevel,headerId:23},null,8,["title","headerLevel"]),oe,se,ue,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:'public class Example {\r\n    public static void print(int size) {\r\n        int i, j; // 第i列,第j行\r\n        for (i = 1; i <= size; i++) { // 印出第i列\r\n            for (j = 1; j <= size; j++) { // 第i列有size個*\r\n                System.out.print("*");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n    public static void main(String[] argv) throws Exception {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        print(Integer.parseInt(in.readLine()));\r\n    }\r\n}'}),(0,n.Wm)(ze,{title:Ne.allHeaders[24].title,headerLevel:Ne.allHeaders[24].headerLevel,headerId:24},null,8,["title","headerLevel"]),ce,he,ve,me,(0,n.Wm)(ze,{title:Ne.allHeaders[25].title,headerLevel:Ne.allHeaders[25].headerLevel,headerId:25},null,8,["title","headerLevel"]),pe,Le,ge,_e,(0,n.Wm)(ze,{title:Ne.allHeaders[26].title,headerLevel:Ne.allHeaders[26].headerLevel,headerId:26},null,8,["title","headerLevel"]),fe,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(gcd(12,18));\r\n    }\r\n    public static int gcd(int x, int y) {\r\n        int tmp;\r\n        // 如果x < y 則下面的迴圈執行第一次時就會交換x,y了\r\n        while (x % y != 0) {\r\n            tmp = y;\r\n            y = x % y;\r\n            x = tmp;\r\n        }\r\n        return y;\r\n    }\r\n}      "}),(0,n.Wm)(ze,{title:Ne.allHeaders[27].title,headerLevel:Ne.allHeaders[27].headerLevel,headerId:27},null,8,["title","headerLevel"]),Te,(0,n.Wm)(ze,{title:Ne.allHeaders[28].title,headerLevel:Ne.allHeaders[28].headerLevel,headerId:28},null,8,["title","headerLevel"]),be,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(fab(5));\r\n    }\r\n    public static int fab(int n) {\r\n        int fn_1 = 1, fn_2 = 0; // 紀錄最近找到的兩個費氏數\r\n        int i, tmp; // i表示目前要找F(i)\r\n        if (n <= 1) return n;\r\n        for (i = 2; i <= n; i++) {\r\n            tmp = fn_1;   // 先把fn_1紀錄在tmp\r\n            fn_1 += fn_2; // 最新的費氏數是前面兩個相加\r\n            fn_2 = tmp;   // 第二新的就是原先的fn_1\r\n        }\r\n        return fn_1;\r\n    }\r\n}"})]),(0,n._)("div",He,[(0,n.Wm)(ze,{title:Ne.allHeaders[29].title,headerLevel:Ne.allHeaders[29].headerLevel,headerId:29},null,8,["title","headerLevel"]),(0,n.Wm)(ze,{title:Ne.allHeaders[30].title,headerLevel:Ne.allHeaders[30].headerLevel,headerId:30},null,8,["title","headerLevel"]),we,ye,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n    public static int sum(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        }\r\n        return n + sum(n - 1);\r\n    }\r\n}"}),(0,n.Wm)(ze,{title:Ne.allHeaders[31].title,headerLevel:Ne.allHeaders[31].headerLevel,headerId:31},null,8,["title","headerLevel"]),Oe,(0,n.Wm)(ze,{title:Ne.allHeaders[32].title,headerLevel:Ne.allHeaders[32].headerLevel,headerId:32},null,8,["title","headerLevel"]),(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(power(2, 6));\r\n    }\r\n    public static int power(int a, int b) {\r\n        switch(b) {\r\n        case 0: return 1;\r\n        case 1: return a;\r\n        default: return (a * power(a, b - 1));\r\n    }\r\n}"}),(0,n.Wm)(ze,{title:Ne.allHeaders[33].title,headerLevel:Ne.allHeaders[33].headerLevel,headerId:33},null,8,["title","headerLevel"]),We,je,Se,(0,n.Wm)(ze,{title:Ne.allHeaders[34].title,headerLevel:Ne.allHeaders[34].headerLevel,headerId:34},null,8,["title","headerLevel"]),Ce,Ie,(0,n.Wm)(Ue,{class:"code-container",language:"java",code:"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(fab(5));\r\n    }\r\n    public static int fab(int num) {\r\n        if (num <= 1) {\r\n            return num;\r\n        }\r\n        return fab(num - 1) + fab(num - 2);\r\n    }\r\n}"}),(0,n.Wm)(ze,{title:Ne.allHeaders[35].title,headerLevel:Ne.allHeaders[35].headerLevel,headerId:35},null,8,["title","headerLevel"]),xe,Je,Me])]),(0,n.Wm)(Fe,{allHeaders:Ne.allHeaders},null,8,["allHeaders"])])}var Ne=t(9868),De=t(5124),ze=t(7831),Ue=t(7139);const Ee=["innerHTML"],Ve=["data-column","innerHTML"],Ae=["data-column","innerHTML"];function Fe(e,l,t,a,r,i){return(0,n.wg)(),(0,n.iD)("table",null,[(0,n._)("thead",null,[(0,n._)("tr",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(i.head,(e=>((0,n.wg)(),(0,n.iD)("th",{style:(0,Ue.j5)(i.thStyle),innerHTML:e},null,12,Ee)))),256))])]),(0,n._)("tbody",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(i.items,(e=>((0,n.wg)(),(0,n.iD)("tr",null,[(0,n._)("td",{"data-column":i.head[0],innerHTML:e.slotOne},null,8,Ve),(0,n._)("td",{"data-column":i.head[1],innerHTML:e.slotTwo},null,8,Ae)])))),256))])])}var Re={name:"TableThreeColumn",props:{data:{type:Object,required:!0},headColour:{type:String,default:"#5382a1"}},computed:{head(){return this.data.filter((e=>0===e.id))[0].columnName},items(){return this.data.filter((e=>0!==e.id))},thStyle(){return"background-color: "+this.headColour}}},Ze=t(89);const Be=(0,Ze.Z)(Re,[["render",Fe],["__scopeId","data-v-550e6092"]]);var Ke=Be;const qe=["innerHTML"],Xe=["data-column","innerHTML"],Ye=["data-column","innerHTML"],Pe=["data-column","innerHTML"];function $e(e,l,t,a,r,i){return(0,n.wg)(),(0,n.iD)("table",null,[(0,n._)("thead",null,[(0,n._)("tr",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(i.head,(e=>((0,n.wg)(),(0,n.iD)("th",{style:(0,Ue.j5)(i.thStyle),innerHTML:e},null,12,qe)))),256))])]),(0,n._)("tbody",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(i.items,(e=>((0,n.wg)(),(0,n.iD)("tr",null,[(0,n._)("td",{"data-column":i.head[0],innerHTML:e.slotOne},null,8,Xe),(0,n._)("td",{"data-column":i.head[1],innerHTML:e.slotTwo},null,8,Ye),(0,n._)("td",{"data-column":i.head[2],innerHTML:e.slotThree},null,8,Pe)])))),256))])])}var Ge={name:"TableThreeColumn",props:{data:{type:Object,required:!0},headColour:{type:String,default:"#5382a1"}},computed:{head(){return this.data.filter((e=>0===e.id))[0].columnName},items(){return this.data.filter((e=>0!==e.id))},thStyle(){return"background-color: "+this.headColour}}};const Qe=(0,Ze.Z)(Ge,[["render",$e],["__scopeId","data-v-1c31ac69"]]);var el=Qe,ll={name:"J_Chapter1",components:{highlightjs:Ne.Z.component,TableOfContentSidebar:ze.Z,TableTwoColumn:Ke,TableThreeColumn:el,HeaderTemplate:De.Z},emits:["allHeaders"],data(){return{allHeaders:[{title:"Java Virtual Machine",headerLevel:2},{title:"Java是物件導向(Object-Oriented)程式語言",headerLevel:2},{title:"資料型別",headerLevel:2},{title:"運算符號(Operator)",headerLevel:2},{title:"算術(Arithmetic)運算符號",headerLevel:3},{title:"邏輯(logic)運算符號",headerLevel:3},{title:"位元(Bit)運算符號",headerLevel:3},{title:"其他運算符號",headerLevel:3},{title:"優先權",headerLevel:3},{title:"流程控制敘述",headerLevel:2},{title:"字串",headerLevel:2},{title:"Java語言的寫作風格",headerLevel:2},{title:"運算符號範例",headerLevel:2},{title:"攝氏溫度轉華氏溫度",headerLevel:3},{title:"華氏溫度轉攝氏溫度",headerLevel:3},{title:"1 + 2 + ... + n的總合",headerLevel:3},{title:"1<sup>2</sup> + 2<sup>2</sup> + ... + n<sup>2</sup>的總合",headerLevel:3},{title:"把浮點數四捨五入為整數",headerLevel:3},{title:"迴圈範例",headerLevel:2},{title:"寫一程式輸入5個整數數字,計算其總合和平均。解析:",headerLevel:3},{title:"寫一函數輸入參數int n,傳回1 + 2 + 3 ... + n的總合。解析:",headerLevel:3},{title:"寫一函數輸入參數int n,傳回1 + 3 + 5 ... + n的總合。解析:",headerLevel:3},{title:"寫一函數於螢幕上畫出九九乘法表。解析:",headerLevel:3},{title:"輸入參數int size,並在螢幕上印出正方形,size=3的樣子如下",headerLevel:3},{title:"輸入參數int size,並在螢幕上印出直角三角形,size=3的樣子如下",headerLevel:3},{title:"撰寫一函數輸入int size,並在螢幕上印出等腰的三角形,size=3的樣子如下",headerLevel:3},{title:"寫一函數求兩個整數的最大公因數,解析:",headerLevel:3},{title:"寫一函數求兩個整數的最小公倍數",headerLevel:3},{title:"寫一函數求費氏數,解析:",headerLevel:3},{title:"遞迴(recursion)範例",headerLevel:2},{title:"求1+2+3+...+n",headerLevel:3},{title:"以遞迴計算1*2+2*3+3*4+…+(n-1)*n之和",headerLevel:3},{title:"利用遞迴求得A的B次方",headerLevel:3},{title:"以遞迴求兩個整數m,n的最大公因數",headerLevel:3},{title:"費式數列",headerLevel:3},{title:"Ackerman函數",headerLevel:3}],table1:[{id:0,columnName:["型別名稱","位元長度","範圍"]},{id:1,slotOne:"boolean",slotTwo:1,slotThree:"true 或 false"},{id:2,slotOne:"byte",slotTwo:8,slotThree:"-128 ~ 127"},{id:3,slotOne:"short",slotTwo:16,slotThree:"-32768 ~ 32767"},{id:4,slotOne:"char",slotTwo:16,slotThree:"Unicode characters"},{id:5,slotOne:"int",slotTwo:32,slotThree:"-2147483648 ~ 2147483647"},{id:6,slotOne:"long",slotTwo:64,slotThree:"-9223372036854775808 ~ 9223372036854775807"},{id:7,slotOne:"float",slotTwo:32,slotThree:"+-3.4028237*10 <sup> +38 </sup> ~ +-1.30239846*10 <sup> -45 </sup>"},{id:8,slotOne:"double",slotTwo:64,slotThree:"+-1.76769313486231570*10 <sup> +308 </sup> ~ 4.94065645841246544*10 <sup> -324 </sup>"}],table2:[{id:0,columnName:["運算符號","功能敘述"]},{id:1,slotOne:"+",slotTwo:"加"},{id:2,slotOne:"*",slotTwo:"乘"},{id:3,slotOne:"-",slotTwo:"減"},{id:4,slotOne:"/",slotTwo:"除"},{id:5,slotOne:"%",slotTwo:"餘數"},{id:6,slotOne:"++",slotTwo:"加一"},{id:7,slotOne:"--",slotTwo:"減一"}],table3:[{id:0,columnName:["運算符號","功能敘述"]},{id:1,slotOne:">",slotTwo:"大於"},{id:2,slotOne:"<",slotTwo:"小於"},{id:3,slotOne:">=",slotTwo:"大於等於"},{id:4,slotOne:"<=",slotTwo:"小於等於"},{id:5,slotOne:"==",slotTwo:"等於"},{id:6,slotOne:"!=",slotTwo:"不等於"},{id:7,slotOne:"&&",slotTwo:"logic AND"},{id:8,slotOne:"||",slotTwo:"logic OR"},{id:9,slotOne:"!",slotTwo:"logic NOT"},{id:10,slotOne:"instanceof",slotTwo:"reference instanceof ClassName<br style='margin:0;' />判斷reference所指到的物件其型態是否和ClassName相容"}],table4:[{id:0,columnName:["運算符號","功能敘述"]},{id:1,slotOne:"&",slotTwo:"bit AND"},{id:2,slotOne:"<<",slotTwo:"left bit shift"},{id:3,slotOne:"|",slotTwo:"bit OR"},{id:4,slotOne:">>",slotTwo:"right bit shift with sign"},{id:5,slotOne:"^",slotTwo:"bit XOR"},{id:6,slotOne:"~",slotTwo:"1補數"},{id:7,slotOne:">>>",slotTwo:"同>>但左邊一律補零"}],table5:[{id:0,columnName:["運算元","功能敘述"]},{id:1,slotOne:"=",slotTwo:"將右邊的值複製到左邊的變數"},{id:2,slotOne:"(type)",slotTwo:"將右邊的數值或reference轉換成type型別"},{id:3,slotOne:"+=",slotTwo:"將右邊的數值加上左邊的數值然後指定給左邊的變數"},{id:4,slotOne:"?:",slotTwo:"若?左邊成立則做:左邊否則做:右邊"},{id:5,slotOne:",",slotTwo:"合併兩個運算視為一個敘述"},{id:6,slotOne:"(運算式)",slotTwo:"表示()內優先運算"},{id:7,slotOne:"(運算式)",slotTwo:"Reference.ObjectMember或ClassName.ClassName<br style='margin:0;' />存取物件或類別成員"},{id:8,slotOne:"new",slotTwo:"產生物件"}],table6:[{id:0,columnName:["種類","運算符號","結合順序"]},{id:1,slotOne:"group",slotTwo:"(op)",slotThree:"left to right"},{id:2,slotOne:"postfix",slotTwo:"[] . (params) op++ op--",slotThree:"right to left"},{id:3,slotOne:"pretfix",slotTwo:"++op --op +op -op ~ !",slotThree:"right to left"},{id:4,slotOne:"creation or casting",slotTwo:"new (type)op",slotThree:"right to left"},{id:5,slotOne:"multiplicative",slotTwo:"* / %",slotThree:"left to right"},{id:6,slotOne:"additive",slotTwo:"+ -",slotThree:"left to right"},{id:7,slotOne:"shift",slotTwo:"<< >> >>>",slotThree:"left to right"},{id:8,slotOne:"relational",slotTwo:"< > <= >= instanceof ==",slotThree:"left to right"},{id:9,slotOne:"equality",slotTwo:"== !=",slotThree:"left to right"},{id:10,slotOne:"bitwise and",slotTwo:"&",slotThree:"left to right"},{id:11,slotOne:"bitwise exclusive or",slotTwo:"^",slotThree:"left to right"},{id:12,slotOne:"bitwise inclusive or",slotTwo:"|",slotThree:"left to right"},{id:13,slotOne:"logic and",slotTwo:"&&",slotThree:"left to right"},{id:14,slotOne:"logic or",slotTwo:"||",slotThree:"left to right"},{id:15,slotOne:"conditional",slotTwo:"?:",slotThree:"right to left"},{id:16,slotOne:"assignment",slotTwo:"= += -= *= /= %= &= ^= |= <<= >>= >>>=",slotThree:"right to left"},{id:17,slotOne:"seperator",slotTwo:",",slotThree:"left to right"}]}},mounted(){this.$emit("allHeaders",this.allHeaders)}};const tl=(0,Ze.Z)(ll,[["render",ke]]);var nl=tl},5124:function(e,l,t){t.d(l,{Z:function(){return m}});var n=t(3396);const a=["id","innerHTML"],r=["id","innerHTML"],i=["id","innerHTML"],d=["id","innerHTML"],o=["id","innerHTML"],s=["id","innerHTML"];function u(e,l,t,u,c,h){return 1===t.headerLevel?((0,n.wg)(),(0,n.iD)("h1",{key:0,id:t.headerId,innerHTML:t.title},null,8,a)):2===t.headerLevel?((0,n.wg)(),(0,n.iD)("h2",{key:1,id:t.headerId,innerHTML:t.title},null,8,r)):3===t.headerLevel?((0,n.wg)(),(0,n.iD)("h3",{key:2,id:t.headerId,innerHTML:t.title},null,8,i)):4===t.headerLevel?((0,n.wg)(),(0,n.iD)("h4",{key:3,id:t.headerId,innerHTML:t.title},null,8,d)):5===t.headerLevel?((0,n.wg)(),(0,n.iD)("h5",{key:4,id:t.headerId,innerHTML:t.title},null,8,o)):6===t.headerLevel?((0,n.wg)(),(0,n.iD)("h6",{key:5,id:t.headerId,innerHTML:t.title},null,8,s)):(0,n.kq)("",!0)}var c={name:"HeaderTemplate",props:{title:{type:String,required:!0},headerLevel:{type:Number,required:!0},headerId:{type:Number,default:-1}},computed:{headerAssembly(){return""}}},h=t(89);const v=(0,h.Z)(c,[["render",u]]);var m=v}}]);
//# sourceMappingURL=965.cbc3b9bd.js.map