{"version":3,"file":"js/902.b2ace9d0.js","mappings":"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","sources":["webpack://final-site/./src/assets/Java/J_Chapter1.vue","webpack://final-site/./src/components/TableTwoColumn.vue","webpack://final-site/./src/components/TableTwoColumn.vue?5fc3","webpack://final-site/./src/components/TableThreeColumn.vue","webpack://final-site/./src/components/TableThreeColumn.vue?9033","webpack://final-site/./src/assets/Java/J_Chapter1.vue?2b57"],"sourcesContent":["<template>\r\n    <div class=\"chapter-container\">\r\n        <div class=\"chapter-article\">\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[0].title\"\r\n                    :headerLevel=\"allHeaders[0].headerLevel\"\r\n                    :headerId=\"0\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>\r\n                    C語言的開發模式, 是編寫.c的Source Code,\r\n                    再經由Compiler編譯成Object Code。所謂Object\r\n                    Code指的是和硬體相關的機器指令,\r\n                    也就是說當我們想要把C程式移植到不同的硬體時,\r\n                    必須要重新Compile,以產生新的執行檔。除了需要重新編譯外,新系統是否具備應用程式所需的程式庫,include的檔案是否相容,\r\n                    也是程式能否在新機器上順利編譯和執行的條件之一。\r\n                </p>\r\n\r\n                <p>\r\n                    在實務上,為了讓C程式能在不同的UNIX版本上都能順利編譯,原作者往往必須使用前置處理器的#ifdef指令,判斷不同環境的適當寫法。如果想把在UNIX上開發的C程式移植到Windows上,則有用到專屬程式庫的部分(如UNIX的使用者介面可能用到X\r\n                    Window的API,Windows就沒有支援,必須一台一台灌程式庫才行,很可能還要花錢買),就必須重寫才行。\r\n                </p>\r\n\r\n                <p>\r\n                    解決此類問題的方法之一,是定義一種Virtual\r\n                    Machine(虛擬機器),讓程式語言編譯時不要翻成實體機器的指令,而是翻成Virtual\r\n                    Machine的目的碼。Virtual\r\n                    Machine一般是以軟體來模擬的,只要新的平台有Virtual\r\n                    Machine,則原始程式不用Compile,執行舊機器上已有的Virtual\r\n                    Machine目的碼,就可以了。當然要達到完全不用重新Compile就能執行的理想,還要配合標準的程式庫才行。\r\n                </p>\r\n\r\n                <p>\r\n                    Java語言基於上述理念,定義了Java Virtual\r\n                    Machine,它所用的指令稱為byte code。使用Virtual\r\n                    Machine的缺點之一,是執行的速度較慢,代價是開發的速度變快了。以現在的硬體來說,大部分應用程式的執行速度已經沒有那麼重要,反倒是軟體的開發速度和品質越來越值得重視。\r\n                </p>\r\n\r\n                <p>\r\n                    此外JVM的技術不斷進步, 諸如Just In Time(JIT)\r\n                    Compiler,\r\n                    或HotSpot等技術都可以讓Java程式以非常接近原生碼(Native\r\n                    Code)的速度執行。因此不要因為某些偏頗的報告或直覺,\r\n                    就不使用Java了。\r\n                </p>\r\n\r\n                <p>\r\n                    開發Java應用程式的工具中,最常見的是由Java的原創公司Sun\r\n                    Micro所出版的JDK(Java Development Kit)。<a\r\n                        href=\"http://java.sun.com/javase/downloads/?intcmp=1281\"\r\n                    >\r\n                        JDK可以免費下載\r\n                    </a>\r\n                    。以Text Editor寫好的Hello.java原始檔:\r\n                </p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Hello {\r\n    public static int gvar;\r\n    public static void say(String s) {\r\n        int x = 10;\r\n        System.out.print(s+x);\r\n    }\r\n    public static void main(String[] argv) {\r\n        float y = 0;\r\n        say(\"Hello, world\\n\");\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>這程式的C版本如下</p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"c\"\r\n                    code='#include <stdio.h>\r\nint gvar;\r\nvoid say(char[] s) {\r\n    int x = 10;\r\n    printf(\"%s%d\", s, x);\r\n}\r\nint main(int argc, char** argv) {\r\n    float y = 0;\r\n    say(\"Hello, world\\n\");\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>經過:</p>\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    autodetect\r\n                    code=\"javac Hello.java\"\r\n                ></highlightjs>\r\n                <p>編譯完成後會產生byte code格式的Hello.class,然後</p>\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    autodetect\r\n                    code=\"java Hello\"\r\n                ></highlightjs>\r\n                <p>\r\n                    就可以利用Java Virtual\r\n                    Machine(此處是java這個執行檔)來執行了。\r\n                </p>\r\n\r\n                <p>上述過程中幾個比較會發生的問題是</p>\r\n\r\n                <ul>\r\n                    <li>javac找不到: 請設定path這個環境變數。</li>\r\n                    <li>\r\n                        javac抱怨class Hello找不到:\r\n                        請確定你的檔名是大寫Hello.java,程式內的public\r\n                        class Hello有沒有大小寫的問題。\r\n                    </li>\r\n                    <li>\r\n                        java抱怨找不到main: 請確定public static void\r\n                        main(String[] argv)毫無錯誤。\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[1].title\"\r\n                    :headerLevel=\"allHeaders[1].headerLevel\"\r\n                    :headerId=\"1\"\r\n                ></HeaderTemplate>\r\n                <p>\r\n                    Java是由C++簡化來的。由於C++要和C完全相容,又很注重效能問題,因此C++算是很複雜的程式語言。Java在設計之初,考量的重點之一就是簡單,因此和C++比起來,不僅更為物件導向,而且比C++容易學習。\r\n                </p>\r\n\r\n                <p>\r\n                    Java許多運算符號和敘述語法都是來自C語言,假設各位已經對C語言有所了解,本章後面的部分只將Java和C在運算符號和敘述語法上的差異點出來,相同的部分請參見C語言的課程內容。\r\n                </p>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[2].title\"\r\n                    :headerLevel=\"allHeaders[2].headerLevel\"\r\n                    :headerId=\"2\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>Java語言所定義的基本資料型別有</p>\r\n\r\n                <TableThreeColumn :data=\"table1\"></TableThreeColumn>\r\n\r\n                <p>Java的資料型態裡沒有unsigned。</p>\r\n\r\n                <p>\r\n                    Java對數值型態的轉換比C稍微嚴格一點,下列左邊的部分都可以指定(assignment)給右邊的型別:\r\n                </p>\r\n\r\n                <pre>\r\nbyte --> short --> int --> long --> float --> double</pre\r\n                >\r\n\r\n                <p>\r\n                    除上述外,其他型別間的轉換都必須下達型別轉換(Type\r\n                    Casting)命令來處理,其形式為圓括弧裡寫上型別名稱,如(double)\r\n                </p>\r\n\r\n                <p>\r\n                    由於Java在char的型態部分採用Unicode,因此字元常數的表示法,除因循C的規則外,也可以直接指定16bits\r\n                    Unicode編碼給char型別的變數。例如由Windows\r\n                    \"字元對應表\"\r\n                    程式中可查到象棋中的紅車的unicode編碼為4FE5,\r\n                    Java可用 '\\u4fe5'\r\n                    來表達。Java的變數也可以用Unicode來命名,換句話說,你可以用中文取變數名稱。\r\n                </p>\r\n\r\n                <p>\r\n                    除了這些基本資料型別外,Java還有一個稱為Reference(參考)的型別。Reference用來存取Object(物件),其功能和C語言的pointer用來存取記憶體有點像,但沒有pointer的&+-等運算符號,而且Reference只能存取型態相符合的類別。宣告Reference的語法是ClassName\r\n                    varName,例如\r\n                </p>\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"String s;\"\r\n                ></highlightjs>\r\n\r\n                <p>\r\n                    宣告s是一個型態為reference的變數,這表示我們可透過s來存取屬於String類別的物件(s\r\n                    is a reference to String object)。\r\n                </p>\r\n\r\n                <p>\r\n                    要特別強調的是,\r\n                    <span class=\"important-red\">\r\n                        s並不是物件, 而是用來指向String物件的reference\r\n                    </span>\r\n                    。打個比方,\r\n                </p>\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class 動物 {\r\n    動物 手指頭; // java 因字元編碼使用unicode, 所以可用中文當變數名稱\r\n    public static void main(String[] arg) {\r\n        動物 手指頭2;\r\n        手指頭2 = new 動物();\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <p>\r\n                    變數 \"手指頭\" 宣告為reference, 可指向屬於 class\r\n                    \"動物\" 的物件, 手指頭不是動物,\r\n                    而是用手指頭指向某隻動物。\r\n                </p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"java.lang.Float f;\r\njava.lang.Double d;\r\njava.lang.Integer i;\"\r\n                ></highlightjs>\r\n\r\n                <p>以上變數的型態都是reference</p>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[3].title\"\r\n                    :headerLevel=\"allHeaders[3].headerLevel\"\r\n                    :headerId=\"3\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>\r\n                    Java語言在運算式的部分,和<router-link to=\"/C\"\r\n                        >C語言</router-link\r\n                    >極為類似, 除了沒有sizeof,\r\n                    pointer和struct相關的運算符號外,\r\n                    另外新增了>>>向右無號shift,\r\n                    以及用來判斷物件型態的instanceof。Java的常數的表示法也和C相同,而Java裡的新資料型態boolean的合法值為true和false兩個常數。\r\n                </p>\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[4].title\"\r\n                    :headerLevel=\"allHeaders[4].headerLevel\"\r\n                    :headerId=\"4\"\r\n                ></HeaderTemplate>\r\n\r\n                <TableTwoColumn :data=\"table2\"></TableTwoColumn>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[5].title\"\r\n                    :headerLevel=\"allHeaders[5].headerLevel\"\r\n                    :headerId=\"5\"\r\n                ></HeaderTemplate>\r\n\r\n                <TableTwoColumn :data=\"table3\"></TableTwoColumn>\r\n\r\n                <p>\r\n                    Java語言和C語言有關邏輯運算最大的不同,在於Java以boolean資料型態(只有true和false兩種值)判斷條件是否成立,而C語言只能使用0或非0。\r\n                </p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[6].title\"\r\n                    :headerLevel=\"allHeaders[6].headerLevel\"\r\n                    :headerId=\"6\"\r\n                ></HeaderTemplate>\r\n\r\n                <TableTwoColumn :data=\"table4\"></TableTwoColumn>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[7].title\"\r\n                    :headerLevel=\"allHeaders[7].headerLevel\"\r\n                    :headerId=\"7\"\r\n                ></HeaderTemplate>\r\n\r\n                <TableTwoColumn :data=\"table5\"></TableTwoColumn>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[8].title\"\r\n                    :headerLevel=\"allHeaders[8].headerLevel\"\r\n                    :headerId=\"8\"\r\n                ></HeaderTemplate>\r\n\r\n                <TableThreeColumn :data=\"table6\"></TableThreeColumn>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[9].title\"\r\n                    :headerLevel=\"allHeaders[9].headerLevel\"\r\n                    :headerId=\"9\"\r\n                ></HeaderTemplate>\r\n\r\n                Java的流程控制敘述和<router-link to=\"/C\"\r\n                    >C語言</router-link\r\n                >極為類似,不同處在於break和continue兩個指令。Java的break和continue指令後面可以加上標籤,以指示要跳出或繼續的範圍。\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class BreakContinueExample {\r\n    public static void main(String[] argv) {\r\n        int i, j;\r\n        outerLoop:\r\n        for (i = 0; i < 100; i++) {\r\n            innerLoop:\r\n            for (j = 0; j < 100; j++) {\r\n                if (j == 50 && i == 50) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n        }\r\n        System.out.println(\"Loop have been terminated.\");\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>\r\n                    在上面的例子中,當j==50且i==50時,break指令會跳出最外面的迴圈,直接印出迴圈終止訊息。如果break後面沒有outerLoop的話,\r\n                    只會跳出裡面的迴圈,然後i從51繼續做下去。\r\n                </p>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[10].title\"\r\n                    :headerLevel=\"allHeaders[10].headerLevel\"\r\n                    :headerId=\"10\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>\r\n                    C語言定義以0結尾的字元陣列就是字串。但對Java來說,\r\n                    字串是由String類別來表達,\r\n                    也就是說String是物件而不是陣列。由於我們經常使用字串,\r\n                    為了寫作程式方便起見, Java\r\n                    Compiler碰到+符號某一邊的型態是String時,\r\n                    就會把+翻譯成StringBuffer類別裡相對應的append\r\n                    Method。例如:\r\n                </p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class StringTest {\r\n    public static void main(String[] argv) {\r\n        int x = 5;\r\n        float y = 1.5;\r\n        System.out.println(\"x = \" + x + \", y = \" + y);\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>會翻譯成:</p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class StringTest {\r\n    public static void main(String[] argv) {\r\n        int x = 5;\r\n        float y = 1.5;\r\n        System.out.println((new StringBuffer(\"x = \")).append(x).append(\", y = \").append(y).toString());\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>\r\n                    如果你會C++, 看到Java字串+符號的語法,\r\n                    千萬不要以為Java支援operator\r\n                    overloading。Java只是透過Compiler來做特別的轉換,\r\n                    稱這種技術為Compiler Sugar比較適合。\r\n                </p>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[11].title\"\r\n                    :headerLevel=\"allHeaders[11].headerLevel\"\r\n                    :headerId=\"11\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>寫作Java程式時,請注意下列幾種風格</p>\r\n\r\n                <ul>\r\n                    <li>Class Name請首字大寫</li>\r\n                    <li>Variable Name和Method Name請首字小寫</li>\r\n                    <li>\r\n                        如果名稱由數個英文字組成,第二個英文字以後首字大寫\r\n                    </li>\r\n                    <li>內縮四個空格</li>\r\n                    <li>\r\n                        註解部分如要變成說明文件,請遵照javadoc這個工具的寫作規則\r\n                    </li>\r\n                </ul>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='/**\r\n * 第一行的兩個**用來告訴javadoc此部份註解要變成HTML文件的一部份\r\n * 這段註解裡的所有文字都會變成此類別一開頭的說明\r\n */\r\npublic class Hello { // Class Name首字大寫\r\n    /**\r\n     * 此段註解會變成描述main方法的一部分\r\n     * @param argv 使用@param註記會產生參數(parameter)argv的相關說明\r\n     * @return 傳回值的意義說明\r\n     */\r\n     public static void main(String[] argv) { // Method Name首字小寫\r\n        // argv: array of references to String object\r\n        int myVariable; // 變數宣告\r\n        int i, sum;\r\n        for (i = 1, sum = 0; i <= 100; i++) {\r\n            sum += i;\r\n        }\r\n        System.out.println(\"summation from 1 to 100 is \"+sum);\r\n    }\r\n}'\r\n                ></highlightjs>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[12].title\"\r\n                    :headerLevel=\"allHeaders[12].headerLevel\"\r\n                    :headerId=\"12\"\r\n                ></HeaderTemplate>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[13].title\"\r\n                    :headerLevel=\"allHeaders[13].headerLevel\"\r\n                    :headerId=\"13\"\r\n                ></HeaderTemplate>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Example {\r\n    public static void main(String[] argv) {\r\n        float degree = 100.0;\r\n        System.out.println(\"100C=\" + (degree * 9.0 / 5.0 + 32.0));\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[14].title\"\r\n                    :headerLevel=\"allHeaders[14].headerLevel\"\r\n                    :headerId=\"14\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>怎麼寫呢?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[15].title\"\r\n                    :headerLevel=\"allHeaders[15].headerLevel\"\r\n                    :headerId=\"15\"\r\n                ></HeaderTemplate>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Example {\r\n    public static void main(String[] argv) {\r\n        int n = 100;\r\n        System.out.println(\"1+2+...+\"+n+\"  = \" + ( n * (n + 1) / 2));\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <p>\r\n                    特別注意上述的運算式裡/2要放到最後面,如果寫成n/2*(n+1),從數學式子的角度看好像沒問題,但別忘了,binary\r\n                    operator的兩邊必須是同樣型別的資料,而且計算的結果也是同樣的型別。因此n/2*(n+1)會先計算n/2,如果n不能被2整除的話,那麼為了符合計算結果必須是整數的限制,則小數點的部份就會無條件捨去,使得計算的結果錯誤。下面的範例一樣要注意相同的問題。\r\n                </p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[16].title\"\r\n                    :headerLevel=\"allHeaders[16].headerLevel\"\r\n                    :headerId=\"16\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[17].title\"\r\n                    :headerLevel=\"allHeaders[17].headerLevel\"\r\n                    :headerId=\"17\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>\r\n                    Java語言規定浮點數轉整數時,小數點部分無條件捨去。如果要達到浮點數四捨五入為整數的效果,可以使用下面的小技巧\r\n                </p>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Example {\r\n    public static void main(String[] argv) {\r\n        double x = 20.6;\r\n        System.out.println(x + \" 四捨五入成為 \" + (int)(x+0.5));\r\n        System.out.println(x + \" 四捨五入成為 \" + round(x));\r\n    }\r\n    static int round(double y) {\r\n        return (int)(y + 0.5);\r\n    }\r\n}'\r\n                ></highlightjs>\r\n                <div class=\"article-container\"></div>\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[18].title\"\r\n                    :headerLevel=\"allHeaders[18].headerLevel\"\r\n                    :headerId=\"18\"\r\n                ></HeaderTemplate>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[19].title\"\r\n                    :headerLevel=\"allHeaders[19].headerLevel\"\r\n                    :headerId=\"19\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>\r\n                        需要1個變數紀錄到目前為止所有inputNum的總和,稱此變數為sum,其初始值為0\r\n                    </li>\r\n                    <li>\r\n                        以迴圈執行5次,每次輸入數字加總到sum,迴圈執行的次數以變數i來代表\r\n                    </li>\r\n                    <li>平均數為sum/5</li>\r\n                    <li>如何讀入資料?</li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static int sum(int n) {\r\n        int total = 0; // 紀錄到目前為止的總和\r\n        for (int i = 1; i <= n; i++) {\r\n            total += i;\r\n        }\r\n        return total;\r\n    }\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[20].title\"\r\n                    :headerLevel=\"allHeaders[20].headerLevel\"\r\n                    :headerId=\"20\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>要想辦法拜訪1,2,3...n的每一個數字一次</li>\r\n                    <li>\r\n                        可用for(i=1; i &lt;= n; i++)的形式達成上述目標\r\n                    </li>\r\n                    <li>拜訪到這些數字時,就把它們加起來</li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static int sum(int n) {\r\n        int total = 0; // 紀錄到目前為止的總和\r\n        for (int i = 1; i <= n; i++) {\r\n            total += i;\r\n        }\r\n        return total;\r\n    }\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[21].title\"\r\n                    :headerLevel=\"allHeaders[21].headerLevel\"\r\n                    :headerId=\"21\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>\r\n                        要想辦法拜訪1,3,5...n的每一個數字一次,也就是從1開始每次加2\r\n                    </li>\r\n                    <li>\r\n                        可用for(i = 1; i &lt;= n; i +=\r\n                        2)的形式達成上述目標\r\n                    </li>\r\n                    <li>拜訪到這些數字時,就把它們加起來</li>\r\n                </ol>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[22].title\"\r\n                    :headerLevel=\"allHeaders[22].headerLevel\"\r\n                    :headerId=\"22\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>\r\n                        總共有i = 1..9 列, j = 1..9 行,\r\n                        對第i列第j行元素來說, 其數值為i*j\r\n                    </li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Example {\r\n    public static void main(String[] argv) {\r\n        for (int i = 1; i <= 9; i++) {\r\n            for (int j = 1; j <= 9; j++) {\r\n                System.out.print(\" \" + (i * j));\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[23].title\"\r\n                    :headerLevel=\"allHeaders[23].headerLevel\"\r\n                    :headerId=\"23\"\r\n                ></HeaderTemplate>\r\n\r\n                <pre>\r\n***\r\n***\r\n*** \r\n</pre\r\n                >\r\n\r\n                <p>解析</p>\r\n\r\n                <ol>\r\n                    <li>\r\n                        螢幕上的游標只能由上而下,由左而右,無法回頭。\r\n                    </li>\r\n                    <li>\r\n                        此圖形共有1..size列,每列有size個*,因此可用兩層迴圈來做。\r\n                    </li>\r\n                    <li>\r\n                        要讓一個敘述執行size次,可用for(i = 1; i &lt;=\r\n                        size; i++)的形式來達成\r\n                    </li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code='public class Example {\r\n    public static void print(int size) {\r\n        int i, j; // 第i列,第j行\r\n        for (i = 1; i <= size; i++) { // 印出第i列\r\n            for (j = 1; j <= size; j++) { // 第i列有size個*\r\n                System.out.print(\"*\");\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n    public static void main(String[] argv) throws Exception {\r\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        print(Integer.parseInt(in.readLine()));\r\n    }\r\n}'\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[24].title\"\r\n                    :headerLevel=\"allHeaders[24].headerLevel\"\r\n                    :headerId=\"24\"\r\n                ></HeaderTemplate>\r\n\r\n                <pre>\r\n*\r\n**\r\n***\r\n    </pre\r\n                >\r\n\r\n                <p>解析</p>\r\n\r\n                <ol>\r\n                    <li>\r\n                        螢幕上的游標只能由上而下,由左而右,無法回頭。\r\n                    </li>\r\n                    <li>\r\n                        此圖形共有1..size列,第i列有個*,因此可用兩層迴圈來做。\r\n                    </li>\r\n                </ol>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[25].title\"\r\n                    :headerLevel=\"allHeaders[25].headerLevel\"\r\n                    :headerId=\"25\"\r\n                ></HeaderTemplate>\r\n                <pre>\r\n  *\r\n ***\r\n*****\r\n    </pre\r\n                >\r\n                <p>解析</p>\r\n                <ol>\r\n                    <li>\r\n                        總共有1..size列,對第i列而言,有size-i個空格,以及(2\r\n                        * i- 1)個*\r\n                    </li>\r\n                </ol>\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[26].title\"\r\n                    :headerLevel=\"allHeaders[26].headerLevel\"\r\n                    :headerId=\"26\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>此函數需要兩個參數x,y</li>\r\n                    <li>\r\n                        當y不能整除x時,將x設成為y,y設為x%y,\r\n                        重複此步驟直到x%y為0\r\n                    </li>\r\n                    <li>此時y就是這兩個數的最大公因數</li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(gcd(12,18));\r\n    }\r\n    public static int gcd(int x, int y) {\r\n        int tmp;\r\n        // 如果x < y 則下面的迴圈執行第一次時就會交換x,y了\r\n        while (x % y != 0) {\r\n            tmp = y;\r\n            y = x % y;\r\n            x = tmp;\r\n        }\r\n        return y;\r\n    }\r\n}      \"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[27].title\"\r\n                    :headerLevel=\"allHeaders[27].headerLevel\"\r\n                    :headerId=\"27\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[28].title\"\r\n                    :headerLevel=\"allHeaders[28].headerLevel\"\r\n                    :headerId=\"28\"\r\n                ></HeaderTemplate>\r\n\r\n                <ol>\r\n                    <li>F(n)=n, if n&lt;=1;</li>\r\n                    <li>F(n)=F(n-1)+F(n-2), otherwise</li>\r\n                    <li>\r\n                        可定義兩變數fn_1,fn_2表示最近兩個找出的費氏數\r\n                    </li>\r\n                    <li>下一個費氏數依定義為fn_1 + fn_2</li>\r\n                    <li>\r\n                        找到最新的費氏數後,最近的兩個費氏數就變成了fn_1+fn_2以及fn_1\r\n                    </li>\r\n                    <li>以變數i紀錄目前要求的是哪一個費氏數</li>\r\n                    <li>\r\n                        以變數tmp作為更新最新兩個費氏數所需的記憶體空間\r\n                    </li>\r\n                </ol>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(fab(5));\r\n    }\r\n    public static int fab(int n) {\r\n        int fn_1 = 1, fn_2 = 0; // 紀錄最近找到的兩個費氏數\r\n        int i, tmp; // i表示目前要找F(i)\r\n        if (n <= 1) return n;\r\n        for (i = 2; i <= n; i++) {\r\n            tmp = fn_1;   // 先把fn_1紀錄在tmp\r\n            fn_1 += fn_2; // 最新的費氏數是前面兩個相加\r\n            fn_2 = tmp;   // 第二新的就是原先的fn_1\r\n        }\r\n        return fn_1;\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n            </div>\r\n            <div class=\"article-container\">\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[29].title\"\r\n                    :headerLevel=\"allHeaders[29].headerLevel\"\r\n                    :headerId=\"29\"\r\n                ></HeaderTemplate>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[30].title\"\r\n                    :headerLevel=\"allHeaders[30].headerLevel\"\r\n                    :headerId=\"30\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>解析</p>\r\n\r\n                <ul>\r\n                    <li>邊際條件是n=1時,總合為1</li>\r\n                    <li>該函數可定成int sum(int n)</li>\r\n                    <li>sum(n) = n + sum(n - 1)</li>\r\n                </ul>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(sum(100));\r\n    }\r\n    public static int sum(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        }\r\n        return n + sum(n - 1);\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[31].title\"\r\n                    :headerLevel=\"allHeaders[31].headerLevel\"\r\n                    :headerId=\"31\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[32].title\"\r\n                    :headerLevel=\"allHeaders[32].headerLevel\"\r\n                    :headerId=\"32\"\r\n                ></HeaderTemplate>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(power(2, 6));\r\n    }\r\n    public static int power(int a, int b) {\r\n        switch(b) {\r\n        case 0: return 1;\r\n        case 1: return a;\r\n        default: return (a * power(a, b - 1));\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[33].title\"\r\n                    :headerLevel=\"allHeaders[33].headerLevel\"\r\n                    :headerId=\"33\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>解析</p>\r\n\r\n                <ul>\r\n                    <li>如果n==0,則最大公因數為m</li>\r\n                    <li>\r\n                        如果n不等於0,則最大公因數為gcd(m,n)==gcd(n, m%n)\r\n                    </li>\r\n                </ul>\r\n\r\n                <p>怎麼寫?</p>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[34].title\"\r\n                    :headerLevel=\"allHeaders[34].headerLevel\"\r\n                    :headerId=\"34\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>解析</p>\r\n\r\n                <ul>\r\n                    <li>費氏數列的定義為F(n)=n, if n&lt;= 1</li>\r\n                    <li>F(n) = F(n-1)+F(n-2), if n > 1。</li>\r\n                </ul>\r\n\r\n                <highlightjs\r\n                    class=\"code-container\"\r\n                    language=\"java\"\r\n                    code=\"public class Example {\r\n    public static void main(String[] argv) {\r\n        System.out.println(fab(5));\r\n    }\r\n    public static int fab(int num) {\r\n        if (num <= 1) {\r\n            return num;\r\n        }\r\n        return fab(num - 1) + fab(num - 2);\r\n    }\r\n}\"\r\n                ></highlightjs>\r\n\r\n                <HeaderTemplate\r\n                    :title=\"allHeaders[35].title\"\r\n                    :headerLevel=\"allHeaders[35].headerLevel\"\r\n                    :headerId=\"35\"\r\n                ></HeaderTemplate>\r\n\r\n                <p>A(m, n)定義為</p>\r\n\r\n                <ol>\r\n                    <li>n + 1, if m = 0</li>\r\n                    <li>A(m - 1, 1), if n = 0</li>\r\n                    <li>A(m - 1, A(m, n - 1)), otherwise</li>\r\n                </ol>\r\n\r\n                <p>怎麼寫?</p>\r\n            </div>\r\n        </div>\r\n        <TableOfContentSidebar\r\n            :allHeaders=\"allHeaders\"\r\n        ></TableOfContentSidebar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport hljs from \"highlight.js/lib/common\";\r\nimport hljsVuePlugin from \"@highlightjs/vue-plugin\";\r\nimport HeaderTemplate from \"@/components/HeaderTemplate.vue\";\r\nimport TableOfContentSidebar from \"@/components/TableOfContentSidebar.vue\";\r\nimport TableTwoColumn from \"@/components/TableTwoColumn.vue\";\r\nimport TableThreeColumn from \"@/components/TableThreeColumn.vue\";\r\n\r\nexport default {\r\n    name: \"J_Chapter1\",\r\n    components: {\r\n        highlightjs: hljsVuePlugin.component,\r\n        TableOfContentSidebar,\r\n        TableTwoColumn,\r\n        TableThreeColumn,\r\n        HeaderTemplate,\r\n    },\r\n    emits: [\"allHeaders\"],\r\n    data() {\r\n        return {\r\n            allHeaders: [\r\n                { title: \"Java Virtual Machine\", headerLevel: 2 },\r\n                {\r\n                    title: \"Java是物件導向(Object-Oriented)程式語言\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"資料型別\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"運算符號(Operator)\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"算術(Arithmetic)運算符號\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"邏輯(logic)運算符號\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"位元(Bit)運算符號\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"其他運算符號\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"優先權\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"流程控制敘述\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"字串\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"Java語言的寫作風格\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"運算符號範例\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"攝氏溫度轉華氏溫度\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"華氏溫度轉攝氏溫度\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"1 + 2 + ... + n的總合\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"1<sup>2</sup> + 2<sup>2</sup> + ... + n<sup>2</sup>的總合\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"把浮點數四捨五入為整數\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"迴圈範例\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"寫一程式輸入5個整數數字,計算其總合和平均。解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數輸入參數int n,傳回1 + 2 + 3 ... + n的總合。解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數輸入參數int n,傳回1 + 3 + 5 ... + n的總合。解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數於螢幕上畫出九九乘法表。解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"輸入參數int size,並在螢幕上印出正方形,size=3的樣子如下\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"輸入參數int size,並在螢幕上印出直角三角形,size=3的樣子如下\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"撰寫一函數輸入int size,並在螢幕上印出等腰的三角形,size=3的樣子如下\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數求兩個整數的最大公因數,解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數求兩個整數的最小公倍數\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"寫一函數求費氏數,解析:\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"遞迴(recursion)範例\",\r\n                    headerLevel: 2,\r\n                },\r\n                {\r\n                    title: \"求1+2+3+...+n\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"以遞迴計算1*2+2*3+3*4+…+(n-1)*n之和\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"利用遞迴求得A的B次方\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"以遞迴求兩個整數m,n的最大公因數\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"費式數列\",\r\n                    headerLevel: 3,\r\n                },\r\n                {\r\n                    title: \"Ackerman函數\",\r\n                    headerLevel: 3,\r\n                },\r\n            ],\r\n            table1: [\r\n                { id: 0, columnName: [\"型別名稱\", \"位元長度\", \"範圍\"] },\r\n                {\r\n                    id: 1,\r\n                    slotOne: \"boolean\",\r\n                    slotTwo: 1,\r\n                    slotThree: \"true 或 false\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    slotOne: \"byte\",\r\n                    slotTwo: 8,\r\n                    slotThree: \"-128 ~ 127\",\r\n                },\r\n                {\r\n                    id: 3,\r\n                    slotOne: \"short\",\r\n                    slotTwo: 16,\r\n                    slotThree: \"-32768 ~ 32767\",\r\n                },\r\n                {\r\n                    id: 4,\r\n                    slotOne: \"char\",\r\n                    slotTwo: 16,\r\n                    slotThree: \"Unicode characters\",\r\n                },\r\n                {\r\n                    id: 5,\r\n                    slotOne: \"int\",\r\n                    slotTwo: 32,\r\n                    slotThree: \"-2147483648 ~ 2147483647\",\r\n                },\r\n                {\r\n                    id: 6,\r\n                    slotOne: \"long\",\r\n                    slotTwo: 64,\r\n                    slotThree:\r\n                        \"-9223372036854775808 ~ 9223372036854775807\",\r\n                },\r\n                {\r\n                    id: 7,\r\n                    slotOne: \"float\",\r\n                    slotTwo: 32,\r\n                    slotThree:\r\n                        \"+-3.4028237*10 <sup> +38 </sup> ~ +-1.30239846*10 <sup> -45 </sup>\",\r\n                },\r\n                {\r\n                    id: 8,\r\n                    slotOne: \"double\",\r\n                    slotTwo: 64,\r\n                    slotThree:\r\n                        \"+-1.76769313486231570*10 <sup> +308 </sup> ~ 4.94065645841246544*10 <sup> -324 </sup>\",\r\n                },\r\n            ],\r\n            table2: [\r\n                { id: 0, columnName: [\"運算符號\", \"功能敘述\"] },\r\n                {\r\n                    id: 1,\r\n                    slotOne: \"+\",\r\n                    slotTwo: \"加\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    slotOne: \"*\",\r\n                    slotTwo: \"乘\",\r\n                },\r\n                {\r\n                    id: 3,\r\n                    slotOne: \"-\",\r\n                    slotTwo: \"減\",\r\n                },\r\n                {\r\n                    id: 4,\r\n                    slotOne: \"/\",\r\n                    slotTwo: \"除\",\r\n                },\r\n                {\r\n                    id: 5,\r\n                    slotOne: \"%\",\r\n                    slotTwo: \"餘數\",\r\n                },\r\n                {\r\n                    id: 6,\r\n                    slotOne: \"++\",\r\n                    slotTwo: \"加一\",\r\n                },\r\n                {\r\n                    id: 7,\r\n                    slotOne: \"--\",\r\n                    slotTwo: \"減一\",\r\n                },\r\n            ],\r\n            table3: [\r\n                { id: 0, columnName: [\"運算符號\", \"功能敘述\"] },\r\n                { id: 1, slotOne: \">\", slotTwo: \"大於\" },\r\n                { id: 2, slotOne: \"<\", slotTwo: \"小於\" },\r\n                { id: 3, slotOne: \">=\", slotTwo: \"大於等於\" },\r\n                { id: 4, slotOne: \"<=\", slotTwo: \"小於等於\" },\r\n                { id: 5, slotOne: \"==\", slotTwo: \"等於\" },\r\n                { id: 6, slotOne: \"!=\", slotTwo: \"不等於\" },\r\n                { id: 7, slotOne: \"&&\", slotTwo: \"logic AND\" },\r\n                { id: 8, slotOne: \"||\", slotTwo: \"logic OR\" },\r\n                { id: 9, slotOne: \"!\", slotTwo: \"logic NOT\" },\r\n                {\r\n                    id: 10,\r\n                    slotOne: \"instanceof\",\r\n                    slotTwo:\r\n                        \"reference instanceof ClassName<br style='margin:0;' />判斷reference所指到的物件其型態是否和ClassName相容\",\r\n                },\r\n            ],\r\n            table4: [\r\n                { id: 0, columnName: [\"運算符號\", \"功能敘述\"] },\r\n                { id: 1, slotOne: \"&\", slotTwo: \"bit AND\" },\r\n                { id: 2, slotOne: \"<<\", slotTwo: \"left bit shift\" },\r\n                { id: 3, slotOne: \"|\", slotTwo: \"bit OR\" },\r\n                {\r\n                    id: 4,\r\n                    slotOne: \">>\",\r\n                    slotTwo: \"right bit shift with sign\",\r\n                },\r\n                { id: 5, slotOne: \"^\", slotTwo: \"bit XOR\" },\r\n                { id: 6, slotOne: \"~\", slotTwo: \"1補數\" },\r\n                {\r\n                    id: 7,\r\n                    slotOne: \">>>\",\r\n                    slotTwo: \"同>>但左邊一律補零\",\r\n                },\r\n            ],\r\n            table5: [\r\n                { id: 0, columnName: [\"運算元\", \"功能敘述\"] },\r\n                {\r\n                    id: 1,\r\n                    slotOne: \"=\",\r\n                    slotTwo: \"將右邊的值複製到左邊的變數\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    slotOne: \"(type)\",\r\n                    slotTwo: \"將右邊的數值或reference轉換成type型別\",\r\n                },\r\n                {\r\n                    id: 3,\r\n                    slotOne: \"+=\",\r\n                    slotTwo:\r\n                        \"將右邊的數值加上左邊的數值然後指定給左邊的變數\",\r\n                },\r\n                {\r\n                    id: 4,\r\n                    slotOne: \"?:\",\r\n                    slotTwo: \"若?左邊成立則做:左邊否則做:右邊\",\r\n                },\r\n                {\r\n                    id: 5,\r\n                    slotOne: \",\",\r\n                    slotTwo: \"合併兩個運算視為一個敘述\",\r\n                },\r\n                {\r\n                    id: 6,\r\n                    slotOne: \"(運算式)\",\r\n                    slotTwo: \"表示()內優先運算\",\r\n                },\r\n                {\r\n                    id: 7,\r\n                    slotOne: \"(運算式)\",\r\n                    slotTwo:\r\n                        \"Reference.ObjectMember或ClassName.ClassName<br style='margin:0;' />存取物件或類別成員\",\r\n                },\r\n                {\r\n                    id: 8,\r\n                    slotOne: \"new\",\r\n                    slotTwo: \"產生物件\",\r\n                },\r\n            ],\r\n            table6: [\r\n                { id: 0, columnName: [\"種類\", \"運算符號\", \"結合順序\"] },\r\n                {\r\n                    id: 1,\r\n                    slotOne: \"group\",\r\n                    slotTwo: \"(op)\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    slotOne: \"postfix\",\r\n                    slotTwo: \"[] . (params) op++ op--\",\r\n                    slotThree: \"right to left\",\r\n                },\r\n                {\r\n                    id: 3,\r\n                    slotOne: \"pretfix\",\r\n                    slotTwo: \"++op --op +op -op ~ !\",\r\n                    slotThree: \"right to left\",\r\n                },\r\n                {\r\n                    id: 4,\r\n                    slotOne: \"creation or casting\",\r\n                    slotTwo: \"new (type)op\",\r\n                    slotThree: \"right to left\",\r\n                },\r\n                {\r\n                    id: 5,\r\n                    slotOne: \"multiplicative\",\r\n                    slotTwo: \"* / %\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 6,\r\n                    slotOne: \"additive\",\r\n                    slotTwo: \"+ -\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 7,\r\n                    slotOne: \"shift\",\r\n                    slotTwo: \"<< >> >>>\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 8,\r\n                    slotOne: \"relational\",\r\n                    slotTwo: \"< > <= >= instanceof ==\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 9,\r\n                    slotOne: \"equality\",\r\n                    slotTwo: \"== !=\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 10,\r\n                    slotOne: \"bitwise and\",\r\n                    slotTwo: \"&\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 11,\r\n                    slotOne: \"bitwise exclusive or\",\r\n                    slotTwo: \"^\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 12,\r\n                    slotOne: \"bitwise inclusive or\",\r\n                    slotTwo: \"|\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 13,\r\n                    slotOne: \"logic and\",\r\n                    slotTwo: \"&&\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 14,\r\n                    slotOne: \"logic or\",\r\n                    slotTwo: \"||\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n                {\r\n                    id: 15,\r\n                    slotOne: \"conditional\",\r\n                    slotTwo: \"?:\",\r\n                    slotThree: \"right to left\",\r\n                },\r\n                {\r\n                    id: 16,\r\n                    slotOne: \"assignment\",\r\n                    slotTwo: \"= += -= *= /= %= &= ^= |= <<= >>= >>>=\",\r\n                    slotThree: \"right to left\",\r\n                },\r\n                {\r\n                    id: 17,\r\n                    slotOne: \"seperator\",\r\n                    slotTwo: \",\",\r\n                    slotThree: \"left to right\",\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    mounted() {\r\n        this.$emit(\"allHeaders\", this.allHeaders);\r\n    },\r\n};\r\n</script>\r\n","<template>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th\r\n                    v-for=\"item in head\"\r\n                    :style=\"thStyle\"\r\n                    v-html=\"item\"\r\n                ></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"item in items\">\r\n                <td :data-column=\"head[0]\" v-html=\"item.slotOne\"></td>\r\n                <td :data-column=\"head[1]\" v-html=\"item.slotTwo\"></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"TableThreeColumn\",\r\n    props: {\r\n        data: { type: Object, required: true },\r\n        headColour: { type: String, default: \"#5382a1\" },\r\n    },\r\n    computed: {\r\n        head() {\r\n            return this.data.filter((e) => {\r\n                return e.id === 0;\r\n            })[0].columnName;\r\n        },\r\n\r\n        items() {\r\n            return this.data.filter((e) => {\r\n                return e.id !== 0;\r\n            });\r\n        },\r\n\r\n        thStyle() {\r\n            return \"background-color: \" + this.headColour;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n    /* width: 750px; */\r\n    border-collapse: collapse;\r\n    margin: 50px 0;\r\n}\r\n\r\n/* Zebra striping */\r\ntr:nth-of-type(odd) {\r\n    background: #eee;\r\n}\r\n\r\nth {\r\n    color: #fff;\r\n    font-weight: bold;\r\n}\r\n\r\ntd,\r\nth {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    text-align: left;\r\n    font-size: 18px;\r\n}\r\n\r\n/* \r\nMax width before this PARTICULAR table gets nasty\r\nThis query will take effect for any screen smaller than 760px\r\nand also iPads specifically.\r\n*/\r\n@media only screen and (max-width: 760px),\r\n    (min-device-width: 768px) and (max-device-width: 1024px) {\r\n    table {\r\n        width: 100%;\r\n    }\r\n\r\n    /* Force table to not be like tables anymore */\r\n    table,\r\n    thead,\r\n    tbody,\r\n    th,\r\n    td,\r\n    tr {\r\n        display: block;\r\n    }\r\n\r\n    /* Hide table headers (but not display: none;, for accessibility) */\r\n    thead tr {\r\n        position: absolute;\r\n        top: -9999px;\r\n        left: -9999px;\r\n    }\r\n\r\n    tr {\r\n        border: 1px solid #ccc;\r\n    }\r\n\r\n    td {\r\n        /* Behave  like a \"row\" */\r\n        border: none;\r\n        border-bottom: 1px solid #eee;\r\n        position: relative;\r\n        padding-left: 50%;\r\n    }\r\n\r\n    td:before {\r\n        /* Now like a table header */\r\n        position: absolute;\r\n        /* Top/left values mimic padding */\r\n        top: 6px;\r\n        left: 6px;\r\n        width: 45%;\r\n        padding-right: 10px;\r\n        white-space: nowrap;\r\n        /* Label the data */\r\n        content: attr(data-column);\r\n\r\n        color: #000;\r\n        font-weight: bold;\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./TableTwoColumn.vue?vue&type=template&id=550e6092&scoped=true\"\nimport script from \"./TableTwoColumn.vue?vue&type=script&lang=js\"\nexport * from \"./TableTwoColumn.vue?vue&type=script&lang=js\"\n\nimport \"./TableTwoColumn.vue?vue&type=style&index=0&id=550e6092&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Doxument_D\\\\University\\\\Work\\\\Year_1\\\\2nd\\\\Computer_Architecture\\\\Report\\\\final-site\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-550e6092\"]])\n\nexport default __exports__","<template>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th\r\n                    v-for=\"item in head\"\r\n                    :style=\"thStyle\"\r\n                    v-html=\"item\"\r\n                ></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"item in items\">\r\n                <td :data-column=\"head[0]\" v-html=\"item.slotOne\"></td>\r\n                <td :data-column=\"head[1]\" v-html=\"item.slotTwo\"></td>\r\n                <td :data-column=\"head[2]\" v-html=\"item.slotThree\"></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"TableThreeColumn\",\r\n    props: {\r\n        data: { type: Object, required: true },\r\n        headColour: { type: String, default: \"#5382a1\" },\r\n    },\r\n    computed: {\r\n        head() {\r\n            return this.data.filter((e) => {\r\n                return e.id === 0;\r\n            })[0].columnName;\r\n        },\r\n\r\n        items() {\r\n            return this.data.filter((e) => {\r\n                return e.id !== 0;\r\n            });\r\n        },\r\n\r\n        thStyle() {\r\n            return \"background-color: \" + this.headColour;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n    /* width: 750px; */\r\n    border-collapse: collapse;\r\n    margin: 50px 0;\r\n}\r\n\r\n/* Zebra striping */\r\ntr:nth-of-type(odd) {\r\n    background: #eee;\r\n}\r\n\r\nth {\r\n    color: #fff;\r\n    font-weight: bold;\r\n}\r\n\r\ntd,\r\nth {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    text-align: left;\r\n    font-size: 18px;\r\n}\r\n\r\n/* \r\nMax width before this PARTICULAR table gets nasty\r\nThis query will take effect for any screen smaller than 760px\r\nand also iPads specifically.\r\n*/\r\n@media only screen and (max-width: 760px),\r\n    (min-device-width: 768px) and (max-device-width: 1024px) {\r\n    table {\r\n        width: 100%;\r\n    }\r\n\r\n    /* Force table to not be like tables anymore */\r\n    table,\r\n    thead,\r\n    tbody,\r\n    th,\r\n    td,\r\n    tr {\r\n        display: block;\r\n    }\r\n\r\n    /* Hide table headers (but not display: none;, for accessibility) */\r\n    thead tr {\r\n        position: absolute;\r\n        top: -9999px;\r\n        left: -9999px;\r\n    }\r\n\r\n    tr {\r\n        border: 1px solid #ccc;\r\n    }\r\n\r\n    td {\r\n        /* Behave  like a \"row\" */\r\n        border: none;\r\n        border-bottom: 1px solid #eee;\r\n        position: relative;\r\n        padding-left: 50%;\r\n    }\r\n\r\n    td:before {\r\n        /* Now like a table header */\r\n        position: absolute;\r\n        /* Top/left values mimic padding */\r\n        top: 6px;\r\n        left: 6px;\r\n        width: 45%;\r\n        padding-right: 10px;\r\n        white-space: nowrap;\r\n        /* Label the data */\r\n        content: attr(data-column);\r\n\r\n        color: #000;\r\n        font-weight: bold;\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./TableThreeColumn.vue?vue&type=template&id=1c31ac69&scoped=true\"\nimport script from \"./TableThreeColumn.vue?vue&type=script&lang=js\"\nexport * from \"./TableThreeColumn.vue?vue&type=script&lang=js\"\n\nimport \"./TableThreeColumn.vue?vue&type=style&index=0&id=1c31ac69&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Doxument_D\\\\University\\\\Work\\\\Year_1\\\\2nd\\\\Computer_Architecture\\\\Report\\\\final-site\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c31ac69\"]])\n\nexport default __exports__","import { render } from \"./J_Chapter1.vue?vue&type=template&id=67df243d\"\nimport script from \"./J_Chapter1.vue?vue&type=script&lang=js\"\nexport * from \"./J_Chapter1.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Doxument_D\\\\University\\\\Work\\\\Year_1\\\\2nd\\\\Computer_Architecture\\\\Report\\\\final-site\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","href","_createElementBlock","_createVNode","_component_HeaderTemplate","title","$data","headerLevel","headerId","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_component_highlightjs","language","code","_hoisted_10","_hoisted_11","autodetect","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_20","_component_TableThreeColumn","data","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_component_router_link","to","_component_TableTwoColumn","_hoisted_35","_hoisted_40","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_46","_hoisted_47","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_component_TableOfContentSidebar","allHeaders","_Fragment","_renderList","$options","item","style","innerHTML","slotOne","slotTwo","name","props","type","Object","required","headColour","String","default","computed","head","this","filter","e","id","columnName","items","thStyle","__exports__","slotThree","components","highlightjs","hljsVuePlugin","TableOfContentSidebar","TableTwoColumn","TableThreeColumn","HeaderTemplate","emits","table1","table2","table3","table4","table5","table6","mounted","$emit","render"],"sourceRoot":""}